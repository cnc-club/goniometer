# Generated by stepconf 1.1 at Fri Nov  4 03:47:21 2016
# Все изменения в этом файле будут перезаписаны
# при следующем запуске stepconf
loadrt trivkins
loadrt motmod base_period_nsec=20000 servo_period_nsec=1000000 num_joints=5
loadrt pid names=pid.x,pid.y,pid.z,pid.a,pid.b
loadrt stepgen step_type=0,0,0,0,0 ctrl_type=p,p,p,p,p
loadrt sum2 count=5
loadrt logic count=1 personality=261


addf stepgen.make-pulses	base-thread

addf stepgen.capture-position	servo-thread
addf motion-command-handler	servo-thread
addf motion-controller	servo-thread
addf sum2.0		servo-thread
addf sum2.1		servo-thread
addf sum2.2		servo-thread
addf sum2.3		servo-thread
addf sum2.4		servo-thread
addf pid.x.do-pid-calcs	servo-thread
addf pid.y.do-pid-calcs	servo-thread
addf pid.z.do-pid-calcs	servo-thread
addf pid.a.do-pid-calcs	servo-thread
addf pid.b.do-pid-calcs	servo-thread
addf stepgen.update-freq	servo-thread

addf logic.0 		servo-thread

setp sum2.0.gain1 -1
setp sum2.1.gain1 -1
setp sum2.2.gain1 -1
setp sum2.3.gain1 -1
setp sum2.4.gain1 -1
source setp-sim.hal


#*******************
#  AXIS X
#*******************
net x-index-enable  <=> pid.x.index-enable
net x-enable	=>  pid.x.enable
net x-pos-cmd	=>  pid.x.command
net x-vel-cmd	=>  pid.x.command-deriv
net x-pos-fb	=>  pid.x.feedback
net x-output	=>  pid.x.output
net x-err	=>  pid.x.error

net x-pos-fb-l	<=  stepgen.0.position-fb =>  sum2.0.in1
net x-output	=>  sum2.0.in0
net x-s-cmd	<=  sum2.0.out
net x-pos-cmd   <=  joint.0.motor-pos-cmd
net x-vel-cmd   <=  joint.0.vel-cmd
net x-s-cmd	=>  stepgen.0.position-cmd
net x-pos-fb    =>  joint.0.motor-pos-fb
net x-enable    <=  joint.0.amp-enable-out
net x-enable	=>  stepgen.0.enable
net x-step	<=  stepgen.0.step
net x-dir	<=  stepgen.0.dir


net x-home	=>  joint.0.home-sw-in
net x-neg-limit	=>  joint.0.neg-lim-sw-in
net x-pos-limit	=>  joint.0.pos-lim-sw-in

#*******************
#  AXIS Y
#*******************
net y-index-enable  <=> pid.y.index-enable
net y-enable	=>  pid.y.enable
net y-pos-cmd	=>  pid.y.command
net y-vel-cmd	=>  pid.y.command-deriv
net y-pos-fb	=>  pid.y.feedback
net y-output	=>  pid.y.output
net y-err	=>  pid.y.error


net y-pos-fb-l	<=  stepgen.1.position-fb =>  sum2.1.in1
net y-output	=>  sum2.1.in0
net y-s-cmd	<=  sum2.1.out
net y-pos-cmd   <=  joint.1.motor-pos-cmd
net y-vel-cmd   <=  joint.1.vel-cmd
net y-s-cmd	=>  stepgen.1.position-cmd
net y-pos-fb    => joint.1.motor-pos-fb
net y-enable    <= joint.1.amp-enable-out
net y-enable	=> stepgen.1.enable
net y-step	<= stepgen.1.step
net y-dir	<= stepgen.1.dir
net y-pos-cmd   <= joint.1.motor-pos-cmd


net y-pos-fb	=>  joint.1.motor-pos-fb

net y-home		=>  joint.1.home-sw-in
net y-neg-limit	=>  joint.1.neg-lim-sw-in
net y-pos-limit	=>  joint.1.pos-lim-sw-in

#*******************
#  AXIS Z
#*******************
net z-index-enable  <=> pid.z.index-enable
net z-enable	=>  pid.z.enable
net z-pos-cmd	=>  pid.z.command
net z-vel-cmd	=>  pid.z.command-deriv
net z-pos-fb	=>  pid.z.feedback
net z-output	=>  pid.z.output
net z-err	=>  pid.z.error

net z-pos-fb-l	<=  stepgen.2.position-fb =>  sum2.2.in1
net z-output	=>  sum2.2.in0
net z-s-cmd	<=  sum2.2.out
net z-pos-cmd   <=  joint.2.motor-pos-cmd
net z-vel-cmd   <=  joint.2.vel-cmd
net z-s-cmd	=>  stepgen.2.position-cmd
net z-pos-fb    => joint.2.motor-pos-fb
net z-enable    <= joint.2.amp-enable-out
net z-enable	=> stepgen.2.enable
net z-step	<= stepgen.2.step
net z-dir	<= stepgen.2.dir
net z-pos-cmd   <= joint.2.motor-pos-cmd


net z-pos-fb	=>  joint.2.motor-pos-fb

net z-home	=>  joint.2.home-sw-in
net z-neg-limit	=>  joint.2.neg-lim-sw-in
net z-pos-limit	=>  joint.2.pos-lim-sw-in


#*******************
#  AXIS A
#*******************

net a-index-enable  <=> pid.a.index-enable
net a-enable	=>  pid.a.enable
net a-pos-cmd	=>  pid.a.command
net a-vel-cmd	=>  pid.a.command-deriv
net a-pos-fb	=>  pid.a.feedback
net a-output	=>  pid.a.output
net a-err	=>  pid.a.error

net a-pos-fb-l	<=  stepgen.3.position-fb =>  sum2.3.in1
net a-output	=>  sum2.3.in0
net a-s-cmd	<=  sum2.3.out
net a-pos-cmd   <=  joint.3.motor-pos-cmd
net a-vel-cmd   <=  joint.3.vel-cmd
net a-s-cmd	=>  stepgen.3.position-cmd
net a-pos-fb    =>  joint.3.motor-pos-fb
net a-enable    <=  joint.3.amp-enable-out
net a-enable	=>  stepgen.3.enable
net a-step	<=  stepgen.3.step
net a-dir	<=  stepgen.3.dir


net a-pos-fb	=>  joint.3.motor-pos-fb

net a-home	=>  joint.3.home-sw-in
net a-neg-limit	=>  joint.3.neg-lim-sw-in
net a-pos-limit	=>  joint.3.pos-lim-sw-in


#*******************
#  AXIS B
#*******************

net b-index-enable  <=> pid.b.index-enable
net b-enable	=>  pid.b.enable
net b-pos-cmd	=>  pid.b.command
net b-vel-cmd	=>  pid.b.command-deriv
net b-pos-fb	=>  pid.b.feedback
net b-output	=>  pid.b.output
net b-err	=>  pid.b.error

net b-pos-fb-l	<=  stepgen.4.position-fb =>  sum2.4.in1
net b-output	=>  sum2.4.in0
net b-s-cmd	<=  sum2.4.out
net b-pos-cmd   <=  joint.4.motor-pos-cmd
net b-vel-cmd   <=  joint.4.vel-cmd
net b-pos-fb    =>  joint.4.motor-pos-fb
net b-enable    <=  joint.4.amp-enable-out
net b-pos-cmd   <=  joint.4.motor-pos-cmd
net b-pos-fb	=>  joint.4.motor-pos-fb
net b-s-cmd	=>  stepgen.4.position-cmd
net b-enable	=>  stepgen.4.enable
net b-step	<=  stepgen.4.step
net b-dir	<=  stepgen.4.dir



net b-home	=>  joint.4.home-sw-in
net b-neg-limit	=>  joint.4.neg-lim-sw-in
net b-pos-limit	=>  joint.4.pos-lim-sw-in

net homed0 	<= joint.0.homed		=> logic.0.in-00
net homed1 	<= joint.1.homed		=> logic.0.in-01
net homed2 	<= joint.2.homed		=> logic.0.in-02
net homed3 	<= joint.3.homed		=> logic.0.in-03
net homed4 	<= joint.4.homed		=> logic.0.in-04
net homed 	<= logic.0.and


net  estop-out <= iocontrol.0.user-enable-out
net  estop-out => iocontrol.0.emc-enable-in
